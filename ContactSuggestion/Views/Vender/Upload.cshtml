@model ContactSuggestion.Models.VenderViewModel

@{
    ViewBag.Title = "Upload";
    Layout = "~/Views/Shared/_Layout - Copy.cshtml";
}

<h2>Upload Venders Details</h2>

@using (Html.BeginForm("Upload", "Vender", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @*<div>

        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
            <li role="presentation" class="active"><a href="#first" aria-controls="first" role="tab" data-toggle="tab">First</a></li>
            <li role="presentation"><a href="#second" aria-controls="second" role="tab" data-toggle="tab">Second</a></li>
        </ul>

        <!-- Tab panes -->
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active" id="first">
            
            </div>
            <div role="tabpanel" class="tab-pane" id="second">
              
            </div>
        </div>

    </div>*@
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VendorId)
        @Html.HiddenFor(model => model.LoginToken)
        @Html.HiddenFor(model => model.ContactId)      
        
        <div class="form-group">
            @Html.LabelFor(model => model.VendorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>    
        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>    

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Document", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DocumentId", ViewData["DocumentId"] as List<SelectListItem>, "Select", htmlAttributes: new { @class = "form-control" })               
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">File</label>
            <div class="col-md-10">
                <input type="file" name="fileupload1" id="fileupload1" value=" " />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Upload" class="btn btn-primary" onclick="return ValidateData();" />
            </div>
        </div>
       @if (TempData["Success"] != null)
        {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
        }
    </div>
   <script type="text/javascript">
       function ValidateData() {
           if (document.getElementById('Address').value == "") {
               alert("Please select Address.");
               return false;
           }
           if (document.getElementById('Email').value == "") {
               alert("Please select Email.");
               return false;
           }
           if (document.getElementById('DocumentId').value == "") {
               alert("Please select Document.");
               return false;
           }
           if (document.getElementById('fileupload1').value == "") {
               alert("Please upload document for selected document type.");
               return false;
           }
           var array = ['pdf', 'doc', 'docx', 'txt', 'xlsx', 'ppt', 'zip'];
           var xyz = document.getElementById("fileupload1");
           var Extension = xyz.value.substring(xyz.value.lastIndexOf('.') + 1).toLowerCase();
           if (array.indexOf(Extension) <= -1) {
               alert("Please Upload only pdf,doc,zip,txt.xlsx and ppt extension flle");
               return false;

           }
       }
   </script>
}

