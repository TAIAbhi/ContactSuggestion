@model ContactSuggestion.Models.WebSiteContact

@{
    ViewBag.Title = "Register";
}

<h2>Request Invite</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    if (TempData["Success"] != null)
    {
        <p class="alert alert-success" id="successMessage">@TempData["Success"]</p>
    }
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })       

      

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContactNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Location1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Location1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.Location2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div class="form-group">
            @Html.LabelFor(model => model.ContactLevelUnderstating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <div>
                    @Html.RadioButtonFor(model => model.ContactLevelUnderstating, "1") 1
                    @Html.RadioButtonFor(model => model.ContactLevelUnderstating, "2") 2
                    @Html.RadioButtonFor(model => model.ContactLevelUnderstating, "3") 3
                    @Html.RadioButtonFor(model => model.ContactLevelUnderstating, "4") 4
                    @Html.RadioButtonFor(model => model.ContactLevelUnderstating, "5") 5

                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Notification, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <div>
                    @Html.RadioButtonFor(model => model.Notification, "1") 1
                    @Html.RadioButtonFor(model => model.Notification, "2") 2
                    @Html.RadioButtonFor(model => model.Notification, "3") 3
                    @Html.RadioButtonFor(model => model.Notification, "4") 4
                    @Html.RadioButtonFor(model => model.Notification, "5") 5

                </div>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsContactDetailsAdded, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBox("IsContactDetailsAdded", new { htmlAttributes = new { @class = "form -control" } })
                @Html.ValidationMessageFor(model => model.IsContactDetailsAdded, "", new { @class = "text-danger" })
            </div>
        </div>*@


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" onclick="return ValidateContact()" />
            </div>
        </div>
        <div id='myModal' class='modal'>
            <div class="modal-dialog">
                <div class="modal-content">
                    <div id='myModalContent'></div>
                </div>
            </div>

        </div>
    </div>
    <script type="text/javascript">
        function  ValidateContact()
        {          
            if (document.getElementById('FirstName').value == "") {
                alert("Please enter user First Name.");
                return false;
            }
          
            if (document.getElementById('ContactNumber').value == "") {
                alert("Please enter valid mobile Number.");
                return false;
            }
            if (document.getElementById('Email').value == "") {
                alert("Please enter email.");
                return false;
            }
            if (document.getElementById('Password').value == "") {
                alert("Please enter Password.");
                return false;
            }
            if (document.getElementById('ConfirmPassword').value == "") {
                alert("Please enter Confirm Password.");
                return false;
            }
            if (document.getElementById('ConfirmPassword').value!= document.getElementById('Password').value)
            {
                alert("The Confirm Password and Password is not same.");
                return false;
            }
        }
    </script>
}
